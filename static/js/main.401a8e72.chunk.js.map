{"version":3,"sources":["utils/backendClient.js","utils/GlobalAuthManager.js","pages/LoginPage.js","pages/LoadingPage.js","pages/ErrorPage.js","pages/DataLoaderPage.js","pages/OverviewPage.js","components/Table.js","utils/hooks.js","components/FirstRowHeader.js","components/SecondRowHeader.js","components/AddEditModal.js","components/DeleteModal.js","pages/RSOListPage.js","pages/ClubsPage.js","pages/TagsPage.js","pages/MoreStatsPage.js","routes.js","components/NavbarHeader.js","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["API","axios","create","baseURL","headers","accept","AuthToken","tokenType","expiresAtKey","this","tokenKey","expireKey","initializeAccessHeader","token","expiresIn","localStorage","setItem","Date","getTime","getItem","get","defaults","common","Authorization","header","expiresAt","TOKENS","access","refresh","GlobalAuthManager","accessAuthToken","refreshAuthToken","accessToken","refreshToken","exists","hasExpired","hasRefresh","isLoggedIn","email","password","post","res","set","data","access_expires_in","refresh_expires_in","delete","fullHeaderConfig","LoginPage","useTitle","useState","showPassword","setShowPassword","isSubmitting","setIsSubmitting","onSubmit","event","a","preventDefault","target","value","signIn","navigate","ROUTE_CONFIG","HOME","path","apiError","response","reason","toast","error","message","align","bg","justify","minHeight","spacing","padding","src","logo","boxSize","as","size","name","type","placeholder","isRequired","onClick","icon","faEye","faEyeSlash","isInline","isLoading","colorScheme","LoadingPage","hasNavbar","ERROR_MESSAGES","404","403","500","ErrorPage","errorCode","finalErrorMsg","errorMsg","paddingBottom","color","DataLoaderPage","promiseFn","children","Loading","Fulfilled","setData","reload","Rejected","code","Card","props","px","py","rounded","shadow","TitleHeading","onReload","faRedo","StatCard","label","number","arrow","helpText","isLoaded","fetchStats","Promise","all","signUpStats","activityStats","signUp","main","recentSignUp","changed","activity","getStatArrow","OverviewStatsDashboard","stats","pr","pl","templateColumns","gap","clubs_registered","Math","abs","clubs_confirmed","clubs_rso_list","students_signed_up","students_confirmed","active_admins","active_users","catalog_searches","OverviewPage","Table","overflow","width","TableHead","TableRow","TableHeader","borderBottomWidth","backgroundColor","textAlign","fontSize","textTransform","letterSpacing","lineHeight","fontWeight","TableBody","TableCell","whiteSpace","deepEqual","require","useSearch","mapper","element","searchDelay","onListChange","query","setQuery","dirtyView","setDirtyView","searchView","setSearchView","searchFilter","result","toLowerCase","search","includes","debouncedSearch","useDebouncedCallback","func","useEffect","filteredView","filter","callback","useSimplePaginator","itemsPerPage","preview","pageNum","setPageNum","pageView","setPageView","numPages","ceil","length","pageIndex","slice","FirstRowHeader","title","prevPage","nextPage","paddingTop","isDisabled","faChevronLeft","faChevronRight","SecondRowHeader","onSearch","onChange","extraButtons","searchInput","useRef","flexGrow","trim","ref","current","faSearch","Object","keys","paddingLeft","map","i","key","constructObj","_fields","copy","forEach","AddEditModal","fields","ctrl","onSave","fieldsRef","orig","original","setCopy","isSame","setSame","useDiffCheck","isOpen","onClose","isCentered","entries","meta","defaultValue","mr","DeleteModal","onDelete","fetchRSOList","downloadRSOList","fileDownload","addRSOEmail","success","deleteRSOEmail","RSOEmailRow","rso","onRequestDelete","registered","confirmed","Button","variant","faChevronDown","faTrash","AddRSOModal","onAdd","DeleteRSOModal","RSOListComponent","rsoList","setRsoList","newRsoList","onDataListChange","rsoListView","deleteModalCtrl","useDisclosure","addModalCtrl","selectedRSO","setSelectedRSO","faPlus","onOpen","faDownload","faSync","opacity","RSOListPage","fetchClubs","downloadClubs","deleteClub","club","ClubRow","DeleteClubModal","ClubListComponent","clubs","setClubList","newClubList","clubListView","selectedClub","setSelectedClub","ClubsPage","fetchTags","downloadTags","addTag","tag","editTag","newTag","put","_id","deleteTag","TagRow","onRequestEdit","num_clubs","faEdit","AddTagModal","EditTagModal","onEdit","DeleteTagModal","TagListComponent","tags","setTags","newTagList","tagListView","editModalCtrl","selectedTag","setSelectedTag","onStartDownload","TagsPage","BG_RAINBOW_COLORS","BORDER_RAINBOW_COLORS","fetchMoreStats","tagUsage","socialMediaUsage","clubReqStats","picStats","socialMedia","clubReqs","generateColors","numDataPoints","colorList","colors","push","DataChart","dataLabels","dataDescription","bgColors","borderColors","showLegend","chartData","labels","datasets","fill","borderColor","borderWidth","chartOptions","display","text","legend","responsive","maintainAspectRatio","options","height","SocialMediaUsageChart","values","numPoints","TagUsageChart","AppRequiredChart","app_required","no_app_required","NewMembersChart","new_members","no_new_members","LogoUsageChart","logo_pic","no_logo_pic","BannerUsageChart","banner_pic","no_banner_pic","MoreStatsDashboard","MoreStatsPage","widget","LOGIN","hidden","RSO","CLUBS","TAGS","MORE_STATS","ROUTE_MAP","route","THIRD_PARTY_LINKS","LinkMenuItem","link","mt","base","md","href","RouteLinkCollection","showMenu","config","routeItems","routeKey","sm","alignItems","signOut","NavbarHeader","setShowMenu","HOME_PATH","currentPath","usePath","currentRoute","find","wrap","faBars","border","faDog","faBug","setBasepath","App","useRedirect","renderedPage","useRoutes","theme","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.401a8e72.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst LOCAL_URL = 'https://sc-backend.ngrok.io';\nconst DEV_URL   = 'https://sc-backend-dev.herokuapp.com';\nconst PROD_URL  = 'https://sc-backend-prod.herokuapp.com';\n\nconst ACCESS_TOKEN_KEY  = 'token';\nconst REFRESH_TOKEN_KEY = 'refreshToken';\nconst ACCESS_TOKEN_EXPIRE_KEY  = 'expiresAt';\nconst REFRESH_TOKEN_EXPIRE_KEY = 'refreshExpiresAt';\n\nconst API = axios.create({\n  baseURL: LOCAL_URL,\n  headers: {\n    accept: 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    'Content-Type': 'application/json',\n  }\n});\n\nclass AuthToken {\n  constructor(tokenType, expiresAtKey) {\n    this.tokenKey = tokenType;\n    this.expireKey = expiresAtKey;\n\n    this.initializeAccessHeader();\n  }\n\n  set(token, expiresIn) {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.expireKey, new Date().getTime() + expiresIn * 1000);\n\n    this.initializeAccessHeader();\n  }\n\n  get() {\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  initializeAccessHeader() {\n    let token = this.get();\n    if (this.tokenKey === ACCESS_TOKEN_KEY && token)\n      API.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n\n  exists() {\n    return !!this.get();\n  }\n\n  header() {\n    return `Bearer ${this.get()}`;\n  }\n\n  fullHeaderConfig() {\n    return {\n      headers: {\n        Authorization: this.header(),\n      },\n    }\n  }\n\n  expiresAt() {\n    return localStorage.getItem(this.expireKey);\n  }\n\n  hasExpired() {\n    let currentTime = new Date().getTime();\n    return currentTime > this.expiresAt();\n  }\n\n  delete() {\n    localStorage.setItem(this.tokenKey, '');\n    localStorage.setItem(this.expireKey, -1);\n\n    if (this.tokenKey === ACCESS_TOKEN_KEY)\n      delete API.defaults.headers.common['Authorization'];\n  }\n}\n\nconst TOKENS = {\n  access: new AuthToken(ACCESS_TOKEN_KEY, ACCESS_TOKEN_EXPIRE_KEY),\n  refresh: new AuthToken(REFRESH_TOKEN_KEY, REFRESH_TOKEN_EXPIRE_KEY)\n}\n\nclass AuthManager {\n  constructor({\n    accessAuthToken,\n    refreshAuthToken\n  }) {\n    this.accessToken = accessAuthToken;\n    this.refreshToken = refreshAuthToken;\n  }\n\n  isLoggedIn() {\n    const hasAccess = this.accessToken.exists() && !this.accessToken.hasExpired();\n    return hasAccess;\n  }\n\n  isFullyLoggedIn() {\n    const hasRefresh = this.refreshToken.exists() && !this.refreshToken.hasExpired();\n    return this.isLoggedIn() && hasRefresh;\n  }\n\n  async signIn({ email, password }) {\n    const res = await API.post('/api/monitor/login', { email, password });\n\n    this.accessToken.set(res.data.access, res.data.access_expires_in);\n    this.refreshToken.set(res.data.refresh, res.data.refresh_expires_in);\n  }\n\n  async signOut(useBackend = true) {\n    if (useBackend) {\n      await API.delete('/api/user/revoke-access', TOKENS.access.fullHeaderConfig());\n      await API.delete('/api/user/revoke-refresh', TOKENS.refresh.fullHeaderConfig());\n    }\n\n    this.accessToken.delete();\n    this.refreshToken.delete();\n  }\n}\n\nexport { API, TOKENS, AuthManager };","import { ROUTE_CONFIG } from '../routes';\n\nimport { AuthManager, TOKENS } from '../utils/backendClient';\n\nexport const GlobalAuthManager = new AuthManager({\n  accessAuthToken: TOKENS.access,\n  refreshAuthToken: TOKENS.refresh\n});","import React, { useState } from 'react';\nimport { useTitle, navigate } from 'hookrouter';\nimport { ROUTE_CONFIG } from '../routes';\n\nimport {  Flex, Stack, Image } from '@chakra-ui/core';\nimport { Heading, InputGroup, InputRightElement } from '@chakra-ui/core';\nimport { Input, Button } from \"@chakra-ui/core\";\n\nimport logo from '../assets/logo.png';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalAuthManager } from '../utils/GlobalAuthManager';\n\nimport { toast } from 'react-toastify';\n\nconst LoginPage = () => {\n  useTitle('Login - sproul.club Dashboard');\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n\n    try {\n      await GlobalAuthManager.signIn({ email, password });\n\n      setIsSubmitting(false);\n      navigate(ROUTE_CONFIG.HOME.path);\n    } catch (err) {\n      const apiError = err.response && err.response.data && err.response.data.reason;\n      toast.error(apiError || err.message);\n\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Flex align=\"center\" bg=\"blue.100\" justify=\"center\" minHeight=\"100vh\">\n      <form onSubmit={onSubmit}>\n        <Stack bg=\"white\" spacing={4} align=\"center\" padding=\"32px\">\n          <Image src={logo} boxSize=\"192px\" />\n          <Heading as=\"h1\" size=\"xl\">Login</Heading>\n\n          <Input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            isRequired\n          />\n\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"Enter password\"\n              isRequired\n            />\n            <InputRightElement>\n              <Button onClick={() => setShowPassword(!showPassword)}>\n                <FontAwesomeIcon icon={showPassword ? faEye : faEyeSlash} />\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n\n\n          <Stack spacing={8} align=\"center\" isInline>\n            <Button isLoading={isSubmitting} colorScheme=\"blue\" type=\"submit\">Login</Button>\n          </Stack>\n        </Stack>\n      </form>\n    </Flex>\n  );\n};\n\n\nexport default LoginPage;","import React from 'react';\nimport { Flex, Spinner } from '@chakra-ui/core';\n\nconst LoadingPage = ({ hasNavbar = false }) => {\n  return (\n    <Flex align=\"center\" justify=\"center\" minHeight={hasNavbar ? '90vh' : '100vh'}>\n      <Spinner size=\"xl\" />\n    </Flex>\n  );\n};\n\nexport default LoadingPage;","import React from 'react';\n\nimport { Flex, Stack, Box, Heading, Icon } from '@chakra-ui/core';\n\nconst ERROR_MESSAGES = {\n  404: 'Oh no! This page does not exist!',\n  403: 'You are not allowed to go here!',\n  500: \"An internal server error has occurred! Call the backend dev about this abomination and tell them 'shame on you and your cow'.\"\n}\n\nconst ErrorPage = ({ errorCode, errorMsg }) => {\n  let finalErrorMsg = errorMsg || ERROR_MESSAGES[errorCode] || 'An unexpected error happened!';\n\n  return (\n    <Flex align=\"center\" justify=\"center\" minHeight=\"100vh\">\n      <Stack spacing={8} align=\"center\" padding=\"32px\">\n        <Box paddingBottom=\"2.0rem\" />\n        <Icon name=\"warning\" size=\"10rem\" color=\"red.500\"></Icon>\n        {errorCode && <Heading as=\"h1\" size=\"xl\">Error {errorCode}</Heading>}\n        <Heading as=\"h4\" size=\"md\">{finalErrorMsg}</Heading>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\n\nimport { Async } from 'react-async';\nimport LoadingPage from './LoadingPage';\nimport ErrorPage from './ErrorPage';\n\nconst DataLoaderPage = ({ promiseFn, children }) => {\n  return (\n    <Async promiseFn={promiseFn}>\n      <Async.Loading>\n        <LoadingPage hasNavbar />\n      </Async.Loading>\n      <Async.Fulfilled>\n        {(data, { setData, reload }) => children(data, { setData, reload})}\n      </Async.Fulfilled>\n      <Async.Rejected>\n        {error => (\n          <ErrorPage\n            errorCode={error.code}\n            errorMsg={error.message}\n          />\n        )}\n      </Async.Rejected>\n    </Async>\n  )\n};\n\nexport default DataLoaderPage;","import React from 'react';\nimport { useTitle } from 'hookrouter';\nimport { Heading, Box, Flex, Grid, Stack, Button } from '@chakra-ui/core';\n\nimport {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n} from \"@chakra-ui/core\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\n\nimport { API } from '../utils/backendClient';\nimport DataLoaderPage from './DataLoaderPage';\n\nconst BASE_PADDING = 48;\nconst SIDE_PADDING = 72;\nconst SECTION_PADDING = 16;\nconst CARD_GAP = 6;\n\nconst Card = props => (\n  <Box px=\"4\" py=\"5\" rounded=\"sm\" shadow=\"lg\" {...props} />\n);\n\nconst TitleHeading = ({ children, onReload }) => (\n  <Flex justify=\"space-between\" paddingBottom=\"8px\">\n    <Heading as=\"h3\" size=\"lg\">{children}</Heading>\n    {onReload &&\n      <Button onClick={onReload}>\n        <FontAwesomeIcon icon={faRedo}/>\n      </Button>\n    }\n  </Flex>\n);\n\nconst StatCard = ({ label, number, arrow = null, helpText = null, isLoaded = false }) => (\n  <Card>\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber>{number}</StatNumber>\n      {helpText && <StatHelpText>\n        {arrow && <StatArrow type={arrow} />}\n        {helpText}\n      </StatHelpText>}\n    </Stat>\n  </Card>\n);\n\nasync function fetchStats() {\n  const [signUpStats, activityStats] = await Promise.all([\n    API.get('/api/monitor/overview/stats/sign-up'),\n    API.get('/api/monitor/overview/stats/activity')\n  ]);\n\n  return {\n    signUp: signUpStats.data.main,\n    recentSignUp: signUpStats.data.changed,\n    activity: activityStats.data,\n  }\n}\n\nfunction getStatArrow(value) {\n  if (value > 0)\n    return 'increase';\n  else if (value < 0)\n    return 'decrease';\n  else\n    return null;\n}\n\nconst OverviewStatsDashboard = ({ stats, reload }) => (\n  <Stack\n    padding={`${BASE_PADDING}px`}\n    pr={`${SIDE_PADDING}px`}\n    pl={`${SIDE_PADDING}px`}\n  >\n    <TitleHeading onReload={reload}>Sign Up</TitleHeading>\n    <Grid templateColumns=\"repeat(5, 1fr)\" gap={CARD_GAP}>\n      <StatCard\n        label=\"Number of clubs registered\"\n        number={stats.signUp.clubs_registered}\n        arrow={getStatArrow(stats.recentSignUp.clubs_registered)}\n        helpText={`${Math.abs(stats.recentSignUp.clubs_registered)} from past week`}\n      />\n      <StatCard\n        label=\"Number of confirmed clubs\"\n        number={stats.signUp.clubs_confirmed}\n        arrow={getStatArrow(stats.recentSignUp.clubs_confirmed)}\n        helpText={`${Math.abs(stats.recentSignUp.clubs_confirmed)} from past week`}\n      />\n      <StatCard\n        label=\"Number of clubs on RSO list\"\n        number={stats.signUp.clubs_rso_list}\n      />\n      <StatCard\n        label=\"Number of students registered\"\n        number={stats.signUp.students_signed_up}\n        arrow={getStatArrow(stats.recentSignUp.students_signed_up)}\n        helpText={`${Math.abs(stats.recentSignUp.students_signed_up)} from past week`}\n      />\n      <StatCard\n        label=\"Number of students confirmed\"\n        number={stats.signUp.students_confirmed}\n        arrow={getStatArrow(stats.recentSignUp.students_confirmed)}\n        helpText={`${Math.abs(stats.recentSignUp.students_confirmed)} from past week`}\n      />\n    </Grid>\n\n    <Box padding={`${SECTION_PADDING}px`} />\n\n    <TitleHeading>Activity</TitleHeading>\n    <Grid templateColumns=\"repeat(3, 1fr)\" gap={CARD_GAP}>\n      <StatCard\n        label=\"Number of active club admins\"\n        number={stats.activity.active_admins}\n      />\n      <StatCard\n        label=\"Number of active users\"\n        number={stats.activity.active_users}\n      />\n      <StatCard\n        label=\"Number of searches\"\n        number={stats.activity.catalog_searches}\n      />\n    </Grid>\n  </Stack>\n);\n\nconst OverviewPage = () => {\n  useTitle('Home - sproul.club Dashboard');\n\n  return (\n    <DataLoaderPage promiseFn={fetchStats}>\n      {(data, { reload }) => <OverviewStatsDashboard stats={data} reload={reload} />}\n    </DataLoaderPage>\n  );\n};\n\nexport default OverviewPage;","/*\n * Shout-out to @aaronmcadam: https://github.com/chakra-ui/chakra-ui/issues/135#issuecomment-644878591\n * Modified from Codepen source: https://codesandbox.io/s/upbeat-christian-3hbgp?file=/src/Table/Table.tsx\n */\n\nimport { Box } from \"@chakra-ui/core\";\nimport React from \"react\";\n\n/**\n * The style of this component is inspired by Tailwind UI.\n * @see https://tailwindui.com/components/application-ui/tables/wide\n */\n\n/**\n * Represents tabular data - that is, information presented in a\n * two-dimensional table comprised of rows and columns of cells containing\n * data. It renders a `<table>` HTML element.\n */\nexport function Table(props) {\n  return (\n    <Box shadow=\"sm\" rounded=\"lg\" overflow=\"hidden\">\n      <Box as=\"table\" width=\"full\" {...props} />\n    </Box>\n  );\n}\n\n/**\n * Defines a set of rows defining the head of the columns of the table. It\n * renders a `<thead>` HTML element.\n */\nexport function TableHead(props) {\n  return <Box as=\"thead\" {...props} />;\n}\n\n/**\n * Defines a row of cells in a table. The row's cells can then be established\n * using a mix of `TableCell` and `TableHeader` elements. It renders a `<tr>`\n * HTML element.\n */\nexport function TableRow(props) {\n  return <Box as=\"tr\" {...props} />;\n}\n\n/**\n * Defines a cell as header of a group of table cells. It renders a `<th>` HTML\n * element.\n */\nexport function TableHeader(props) {\n  return (\n    <Box\n      as=\"th\"\n      px=\"6\"\n      py=\"3\"\n      borderBottomWidth=\"1px\"\n      backgroundColor=\"gray.50\"\n      textAlign=\"left\"\n      fontSize=\"xs\"\n      color=\"gray.500\"\n      textTransform=\"uppercase\"\n      letterSpacing=\"wider\"\n      lineHeight=\"1rem\"\n      fontWeight=\"medium\"\n      {...props}\n    />\n  );\n}\n\n/**\n * Encapsulates a set of table rows, indicating that they comprise the body of\n * the table. It renders a `<tbody>` HTML element.\n */\nexport function TableBody(props) {\n  return <Box as=\"tbody\" {...props} />;\n}\n\n/**\n * Defines a cell of a table that contains data. It renders a `<td>` HTML\n * element.\n */\nexport function TableCell(props) {\n  return (\n    <Box\n      as=\"td\"\n      px=\"4\"\n      py=\"2\"\n      lineHeight=\"1.25rem\"\n      whiteSpace=\"nowrap\"\n      {...props}\n    />\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst deepEqual = require('fast-deep-equal/es6/react');\n\nfunction useSearch({ data, mapper = element => element, searchDelay = 0, onListChange = null }) {\n  const [query, setQuery] = useState('');\n  const [dirtyView, setDirtyView] = useState(false);\n  const [searchView, setSearchView] = useState([]);\n\n  function searchFilter(element) {\n    if (!element)\n      return false;\n\n    let result = mapper(element).toLowerCase();\n    let search = query.toLowerCase();\n    return result.includes(search);\n  }\n\n  const debouncedSearch = useDebouncedCallback(query => {\n    setDirtyView(true);\n    setQuery(query);\n    setDirtyView(false);\n  }, searchDelay);\n\n  async function duringListUpdate(func) {\n    setDirtyView(true);\n    await func();\n    await onListChange();\n    setDirtyView(false);\n  }\n\n  useEffect(() => {\n    let filteredView = query ? data.filter(searchFilter) : data;\n    setSearchView(filteredView);\n  }, [data, query]);\n\n  return [\n    {\n      get: () => query,\n      set: debouncedSearch.callback\n    },\n    {\n      get: () => dirtyView,\n      set: setDirtyView\n    },\n    searchView,\n    !!onListChange ? duringListUpdate : null\n  ];\n}\n\nfunction useSimplePaginator(data, itemsPerPage, preview) {\n  const [pageNum, setPageNum] = useState(1);\n  const [pageView, setPageView] = useState([]);\n\n  const numPages = Math.ceil(data.length / itemsPerPage);\n\n  useEffect(() => {\n    let pageIndex = (pageNum - 1) * itemsPerPage;\n    setPageView(data.slice(pageIndex, pageIndex + itemsPerPage));\n  }, [data, pageNum, itemsPerPage]);\n\n  useEffect(() => setPageNum(1), [data]);\n\n  const nextPage = () => pageNum < numPages && setPageNum(pageNum + 1);\n  const prevPage = () => pageNum > 1 && setPageNum(pageNum - 1);\n\n  return [pageNum, numPages, pageView, nextPage, prevPage];\n}\n\nfunction useDiffCheck(orig) {\n  const [original,] = useState(orig);\n  const [copy, setCopy] = useState(orig);\n  const [isSame, setSame] = useState(true);\n\n  useEffect(() => {\n    setSame(deepEqual(original, copy));\n  }, [copy]);\n\n  return [copy, setCopy, isSame];\n}\n\nexport { useDiffCheck, useSearch, useSimplePaginator };","import React from 'react';\n\nimport {\n  Heading,\n  Flex,\n  Button,\n  ButtonGroup\n} from '@chakra-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nconst FirstRowHeader = ({ title, pageNum, numPages, prevPage, nextPage }) => (\n  <Flex justify=\"space-between\">\n    <Heading as=\"h1\" size=\"xl\">{title}</Heading>\n\n    <ButtonGroup align=\"flex-end\" paddingTop=\"4px\">\n      <Button onClick={prevPage} isDisabled={pageNum <= 1}>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </Button>\n\n      {/* FIXME/HACK: Using button here because text looks nice when aligning within ButtonGroup */}\n      <Button isDisabled>\n        {`${pageNum} / ${numPages}`}\n      </Button>\n\n      <Button onClick={nextPage} isDisabled={pageNum >= numPages}>\n        <FontAwesomeIcon icon={faChevronRight} />\n      </Button>\n    </ButtonGroup>\n  </Flex>\n);\n\nexport default FirstRowHeader;","import React, { useRef } from 'react';\n\nimport {\n  Flex,\n  Button,\n  ButtonGroup,\n  Input,\n  InputGroup,\n  InputRightElement\n} from '@chakra-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst SecondRowHeader = ({ onSearch = null, onChange = null, extraButtons = null }) => {\n  const searchInput = useRef(null);\n\n  return (\n    <Flex>\n      <InputGroup size=\"lg\" flexGrow=\"1\" >\n        <Input\n          rounded=\"0\"\n          placeholder=\"Search...\"\n          onChange={event => onChange && onChange(event.target.value.trim())}\n          ref={searchInput}\n        />\n        <InputRightElement>\n          <Button\n            colorScheme=\"blue\"\n            isLoading={false}\n            onClick={() => onSearch && onSearch(searchInput.current.value.trim())}\n          >\n            <FontAwesomeIcon icon={faSearch} />\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n\n      {\n        (extraButtons && Object.keys(extraButtons).length > 0) &&\n        <ButtonGroup align=\"flex-end\" paddingTop=\"4px\" paddingLeft=\"4px\">\n          {extraButtons.map(({ icon, onClick }, i) => (\n            <Button onClick={onClick} key={i}>\n              <FontAwesomeIcon icon={icon} />\n            </Button>\n          ))}\n        </ButtonGroup>\n      }\n    </Flex>\n  );\n}\n\nexport default SecondRowHeader;","import React, { Fragment, useRef } from 'react';\n\nimport {\n  Button,\n  Input,\n  Stack,\n  Heading,\n} from '@chakra-ui/core';\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/core';\n\nimport { useDiffCheck } from '../utils/hooks';\n\nfunction constructObj(_fields, ref) {\n  const copy = {};\n  Object.keys(_fields).forEach(key => {\n    if (ref.current[key])\n      copy[key] = ref.current[key].value.trim();\n    else\n      copy[key] = _fields[key].value;\n  });\n\n  return copy;\n}\n\nconst AddEditModal = ({ title, fields, ctrl, onSave }) => {\n  const fieldsRef = useRef({});\n\n  const orig = constructObj(fields, fieldsRef);\n  const [copy, setCopy, isSame] = useDiffCheck(orig);\n\n  return (\n    <Modal\n      isOpen={ctrl.isOpen}\n      onClose={ctrl.onClose}\n      isCentered\n    >\n      <ModalOverlay>\n        <ModalContent>\n          <ModalHeader>{title}</ModalHeader>\n          <ModalCloseButton />\n\n          <ModalBody>\n            <Stack spacing={3}>\n              {Object.entries(fields).map(([key, meta]) => (\n                <Fragment key={key}>\n                  <Heading size=\"md\">{meta.name}</Heading>\n                  <Input\n                    placeholder={meta.name}\n                    defaultValue={meta.value || ''}\n                    onChange={() => setCopy(constructObj(fields, fieldsRef))}\n                    ref={ref => fieldsRef.current[key] = ref} />\n                </Fragment>\n              ))}\n            </Stack>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme=\"blue\"\n              mr={3}\n              isDisabled={isSame}\n              onClick={async () => {\n                ctrl.onClose();\n                await onSave(copy);\n              }}>\n              Save\n            </Button>\n\n            <Button onClick={ctrl.onClose}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </ModalOverlay>\n    </Modal>\n  );\n}\n\nexport default AddEditModal;","import React, { Fragment } from 'react';\n\nimport {\n  Button,\n  ButtonGroup,\n  Heading,\n  Stack,\n  Text\n} from '@chakra-ui/core';\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/core';\n\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n} from '@chakra-ui/core';\n\nconst DeleteModal = ({ title, fields, ctrl, onDelete }) => (\n  <Modal\n    isOpen={ctrl.isOpen}\n    onClose={ctrl.onClose}\n    isCentered\n  >\n    <ModalOverlay>\n      <ModalContent>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalCloseButton />\n\n        <ModalBody>\n          <Stack spacing={3}>\n            {fields && Object.keys(fields).map((key, i) => (\n              <Fragment key={i}>\n                <Heading size=\"md\">{key}</Heading>\n                <Text>{fields[key]}</Text>\n              </Fragment>\n            ))}\n          </Stack>\n        </ModalBody>\n\n        <ModalFooter>\n          <Popover>\n            <PopoverTrigger>\n              <Button colorScheme=\"red\" mr={3}>\n                Delete\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent>\n              <PopoverArrow />\n              <PopoverHeader>Are you sure?</PopoverHeader>\n              <PopoverCloseButton />\n              <PopoverBody>\n                <ButtonGroup size=\"sm\">\n                  <Button\n                    colorScheme=\"red\"\n                    onClick={async () => {\n                      ctrl.onClose();\n                      await onDelete();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                  <Button onClick={ctrl.onClose}>No</Button>\n                </ButtonGroup>\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n\n          <Button onClick={ctrl.onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </ModalOverlay>\n  </Modal>\n);\n\nexport default DeleteModal;","import React, { useState } from 'react';\nimport { useTitle } from 'hookrouter';\nimport {\n  Box,\n  Text,\n  Flex,\n  Stack,\n  Button,\n} from '@chakra-ui/core';\n\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem\n} from '@chakra-ui/core';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow\n} from '../components/Table';\n\nimport { useDisclosure } from '@chakra-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faDownload, faSync, faChevronDown, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { API } from '../utils/backendClient';\nimport fileDownload from 'js-file-download';\nimport { useSearch, useSimplePaginator } from '../utils/hooks';\nimport DataLoaderPage from './DataLoaderPage';\n\nimport FirstRowHeader from '../components/FirstRowHeader';\nimport SecondRowHeader from '../components/SecondRowHeader';\n\nimport { toast } from 'react-toastify';\nimport AddEditModal from '../components/AddEditModal';\nimport DeleteModal from '../components/DeleteModal';\n\nconst SEARCH_DELAY = 500;\nconst NUM_EMAILS_SHOWN = 10;\n\nasync function fetchRSOList() {\n  const res = await API.get('/api/monitor/rso/list');\n  return res.data;\n}\n\nasync function downloadRSOList() {\n  const res = await API.get('/api/monitor/rso/download');\n\n  // NOTE: Not a synchronous call!\n  fileDownload(res.data, 'rso_emails.csv');\n}\n\nasync function addRSOEmail(email) {\n  try {\n    await API.post(`/api/monitor/rso`, { email });\n    toast.success(`Successfully added RSO email: '${email}'!`);\n  } catch (err) {\n    const apiError = err.response && err.response.data && err.response.data.reason;\n    toast.error(apiError || err.message);\n  }\n}\n\nasync function deleteRSOEmail(email) {\n  try {\n    await API.delete(`/api/monitor/rso/${email}`);\n    toast.success(`Successfully deleted RSO email: '${email}'!`);\n  } catch (err) {\n    const apiError = err.response && err.response.data && err.response.data.reason;\n    toast.error(apiError || err.message);\n  }\n}\n\nconst RSOEmailRow = ({ rso, onRequestDelete }) => (\n  <TableRow>\n    <TableCell>\n      <Text fontSize=\"md\" color=\"gray.500\">\n        {rso.email}\n      </Text>\n    </TableCell>\n    <TableCell bg={rso.registered ? \"green.200\" : \"red.200\"}>\n      <Text textAlign=\"center\" fontSize=\"md\" color=\"gray.500\">\n        {rso.registered ? \"Yes\" : \"No\"}\n      </Text>\n    </TableCell>\n    <TableCell bg={rso.confirmed ? \"green.200\" : \"red.200\"}>\n      <Text textAlign=\"center\" fontSize=\"md\" color=\"gray.500\">\n        {rso.confirmed ? \"Yes\" : \"No\"}\n      </Text>\n    </TableCell>\n    <TableCell textAlign=\"center\">\n      <Menu>\n        <MenuButton as={Button} variant=\"ghost\">\n          <FontAwesomeIcon icon={faChevronDown} size=\"sm\" />\n        </MenuButton>\n        <MenuList>\n          <MenuItem onClick={onRequestDelete}>\n            <span>\n              <FontAwesomeIcon icon={faTrash} size=\"sm\" />\n              {\"  \"}Remove\n            </span>\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </TableCell>\n  </TableRow>\n);\n\nconst AddRSOModal = ({ ctrl, onAdd }) => (\n  <AddEditModal\n    title=\"Add RSO Email\"\n    ctrl={ctrl}\n    onSave={onAdd}\n    fields={{\n      email: {\n        name: 'RSO Email',\n        value: ''\n      }\n    }}\n  />\n);\n\nconst DeleteRSOModal = ({ rso = null, ctrl, onDelete }) => (\n  rso &&\n  <DeleteModal\n    title=\"Delete RSO Email\"\n    ctrl={ctrl}\n    onDelete={() => onDelete(rso)}\n    fields={{\n      'RSO Email': rso.email,\n      'Registered': (rso.registered ? 'Yes' : 'No'),\n      'Confirmed': (rso.confirmed ? 'Yes' : 'No'),\n    }}\n  />\n);\n\nconst RSOListComponent = ({ rsoList, setRsoList }) => {\n  const [search, dirtyView, searchView, onDataListChange] = useSearch({\n    data: rsoList,\n    mapper: rso => rso.email,\n    searchDelay: SEARCH_DELAY,\n    onListChange: async () => {\n      const newRsoList = await fetchRSOList();\n      setRsoList(newRsoList);\n    }\n  });\n\n  const [pageNum, numPages, rsoListView, nextPage, prevPage] = useSimplePaginator(searchView, NUM_EMAILS_SHOWN);\n\n  const deleteModalCtrl = useDisclosure();\n  const addModalCtrl = useDisclosure();\n  const [selectedRSO, setSelectedRSO] = useState(null);\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Stack paddingTop=\"32px\">\n        <FirstRowHeader\n          title=\"RSO List\"\n          pageNum={pageNum}\n          numPages={numPages}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n\n        <Box\n          paddingTop=\"8px\"\n          paddingBottom=\"4px\"\n        >\n          <SecondRowHeader\n            onChange={query => search.set(query)}\n            onSearch={query => search.set(query)}\n            extraButtons={[\n              {icon: faPlus, onClick: addModalCtrl.onOpen},\n              {icon: faDownload, onClick: downloadRSOList},\n              {icon: faSync, onClick: () => onDataListChange(() => {})}\n            ]}\n          />\n        </Box>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableHeader>Club email</TableHeader>\n              <TableHeader>Registered?</TableHeader>\n              <TableHeader>Confirmed?</TableHeader>\n              <TableHeader>Actions</TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody opacity={dirtyView.get() ? 0.5 : 1}>\n            <AddRSOModal\n              ctrl={addModalCtrl}\n              onAdd={async (rso) => {\n                await onDataListChange(() => addRSOEmail(rso.email));\n                setSelectedRSO(null);\n              }}\n            />\n\n            <DeleteRSOModal\n              rso={selectedRSO}\n              ctrl={deleteModalCtrl}\n              onDelete={async (rso) => {\n                await onDataListChange(() => deleteRSOEmail(rso.email));\n                setSelectedRSO(null);\n              }}\n            />\n\n            {rsoListView.map((rso, i) => (\n              <RSOEmailRow\n                key={i}\n                rso={rso}\n                onRequestDelete={() => {\n                  setSelectedRSO(rso);\n                  deleteModalCtrl.onOpen();\n                }}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Stack>\n    </Flex>\n  );\n}\n\n\nconst RSOListPage = () => {\n  useTitle('RSO List - sproul.club Dashboard');\n\n  return (\n    <DataLoaderPage promiseFn={fetchRSOList}>\n      {(data, { setData }) => <RSOListComponent rsoList={data} setRsoList={setData} />}\n    </DataLoaderPage>\n  );\n};\n\nexport default RSOListPage;","import React, { useState } from 'react';\nimport { useTitle } from 'hookrouter';\nimport {\n  Box,\n  Text,\n  Flex,\n  Stack,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n} from '@chakra-ui/core';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow\n} from '../components/Table';\n\nimport { useDisclosure } from '@chakra-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload, faChevronDown, faSync, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { API } from '../utils/backendClient';\nimport fileDownload from 'js-file-download';\nimport { useSearch, useSimplePaginator } from '../utils/hooks';\nimport DataLoaderPage from './DataLoaderPage';\n\nimport { toast } from 'react-toastify';\nimport DeleteModal from '../components/DeleteModal';\n\nimport FirstRowHeader from '../components/FirstRowHeader';\nimport SecondRowHeader from '../components/SecondRowHeader';\n\nconst NUM_CLUBS_SHOWN = 10;\nconst SEARCH_DELAY = 500;\n\nasync function fetchClubs() {\n  const res = await API.get('/api/monitor/club/list');\n  return res.data;\n}\n\nasync function downloadClubs() {\n  const res = await API.get('/api/monitor/club/download');\n\n  // NOTE: Not a synchronous call!\n  fileDownload(res.data, 'clubs.csv');\n}\n\nasync function deleteClub(club) {\n  try {\n    await API.delete(`/api/monitor/club/${club.email}`);\n    toast.success(`Successfully deleted club: '${club.name}'!`);\n  } catch (err) {\n    const apiError = err.response && err.response.data && err.response.data.reason;\n    toast.error(apiError || err.message);\n  }\n}\n\nconst ClubRow = ({ club, onRequestDelete }) => (\n  <TableRow>\n    <TableCell>\n      <Text fontSize=\"md\" color=\"gray.500\">\n        {club.name}\n      </Text>\n    </TableCell>\n    <TableCell>\n      <Text fontSize=\"md\" color=\"gray.500\">\n        {club.email}\n      </Text>\n    </TableCell>\n    <TableCell bg={club.confirmed ? \"green.200\" : \"red.200\"}>\n      <Text textAlign=\"center\" fontSize=\"md\" color=\"gray.500\">\n        {club.confirmed ? \"Yes\" : \"No\"}\n      </Text>\n    </TableCell>\n    <TableCell textAlign=\"center\">\n      <Menu>\n        <MenuButton as={Button} variant=\"ghost\">\n          <FontAwesomeIcon icon={faChevronDown} size=\"sm\" />\n        </MenuButton>\n        <MenuList>\n          <MenuItem onClick={onRequestDelete}>\n            <span>\n              <FontAwesomeIcon icon={faTrash} size=\"sm\" />\n              {\"  \"}Remove\n            </span>\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </TableCell>\n  </TableRow>\n);\n\nconst DeleteClubModal = ({ club = null, ctrl, onDelete }) => (\n  club && <DeleteModal\n    title=\"Delete Club\"\n    ctrl={ctrl}\n    onDelete={() => onDelete(club)}\n    fields={{\n      'Club Name': club.name,\n      'Club Email': club.email,\n    }}\n  />\n);\n\nconst ClubListComponent = ({ clubs, setClubList }) => {\n  const [search, dirtyView, searchView, onDataListChange] = useSearch({\n    data: clubs,\n    mapper: club => club.name,\n    searchDelay: SEARCH_DELAY,\n    onListChange: async () => {\n      const newClubList = await fetchClubs();\n      setClubList(newClubList);\n    }\n  });\n\n  const [pageNum, numPages, clubListView, nextPage, prevPage] = useSimplePaginator(searchView, NUM_CLUBS_SHOWN);\n\n  const deleteModalCtrl = useDisclosure();\n  const [selectedClub, setSelectedClub] = useState(null);\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Stack paddingTop=\"32px\">\n        <FirstRowHeader\n          title=\"Clubs\"\n          pageNum={pageNum}\n          numPages={numPages}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n\n        <Box\n          paddingTop=\"8px\"\n          paddingBottom=\"4px\"\n        >\n          <SecondRowHeader\n            onChange={query => search.set(query)}\n            onSearch={query => search.set(query)}\n            extraButtons={[\n              {icon: faDownload, onClick: downloadClubs},\n              {icon: faSync, onClick: () => onDataListChange(() => {})}\n            ]}\n          />\n        </Box>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableHeader>Club name</TableHeader>\n              <TableHeader>Club email</TableHeader>\n              <TableHeader>Confirmed?</TableHeader>\n              <TableHeader>Actions</TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody opacity={dirtyView.get() ? 0.5 : 1}>\n            <DeleteClubModal\n              club={selectedClub}\n              ctrl={deleteModalCtrl}\n              onDelete={async (club) => {\n                await onDataListChange(() => deleteClub(club));\n                setSelectedClub(null);\n              }}\n            />\n\n            {clubListView.map((club, i) => (\n              <ClubRow\n                key={i}\n                club={club}\n                onRequestDelete={() => {\n                  setSelectedClub(club);\n                  deleteModalCtrl.onOpen();\n                }}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Stack>\n    </Flex>\n  );\n}\n\nconst ClubsPage = () => {\n  useTitle('Clubs - sproul.club Dashboard');\n\n  return (\n    <DataLoaderPage promiseFn={fetchClubs}>\n      {(data, { setData }) => <ClubListComponent clubs={data} setClubList={setData} />}\n    </DataLoaderPage>\n  );\n};\n\nexport default ClubsPage;","import React, { useState } from 'react';\nimport { useTitle } from 'hookrouter';\n\nimport {\n  Box,\n  Flex,\n  Stack,\n  Button,\n  Text,\n} from '@chakra-ui/core';\n\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem\n} from '@chakra-ui/core';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow\n} from '../components/Table';\n\nimport { useDisclosure } from '@chakra-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload, faChevronDown, faPlus, faEdit, faSync, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { API } from '../utils/backendClient';\nimport fileDownload from 'js-file-download';\nimport { useSearch, useSimplePaginator } from '../utils/hooks';\nimport DataLoaderPage from './DataLoaderPage';\n\nimport { toast } from 'react-toastify';\nimport AddEditModal from '../components/AddEditModal';\nimport DeleteModal from '../components/DeleteModal';\n\nimport FirstRowHeader from '../components/FirstRowHeader';\nimport SecondRowHeader from '../components/SecondRowHeader';\n\nconst SEARCH_DELAY = 500;\nconst NUM_TAGS_SHOWN = 10;\n\nasync function fetchTags() {\n  const res = await API.get('/api/monitor/tags/list');\n  return res.data;\n}\n\nasync function downloadTags() {\n  const res = await API.get('/api/monitor/tags/download');\n\n  // NOTE: Not a synchronous call!\n  fileDownload(res.data, 'tags.csv');\n}\n\nasync function addTag(tag) {\n  try {\n    await API.post(`/api/monitor/tags`, { name: tag.name });\n    toast.success(`Successfully added tag: '${tag.name}'!`);\n  } catch (err) {\n    const apiError = err.response && err.response.data && err.response.data.reason;\n    toast.error(apiError || err.message);\n  }\n}\n\nasync function editTag(tag, newTag) {\n  try {\n    await API.put(`/api/monitor/tags/${tag._id}`, { name: newTag.name });\n    toast.success(`Successfully changed tag name from '${tag.name}'' to '${newTag.name}'!`);\n  } catch (err) {\n    const apiError = err.response && err.response.data && err.response.data.reason;\n    toast.error(apiError || err.message);\n  }\n}\n\nasync function deleteTag(tag) {\n  try {\n    await API.delete(`/api/monitor/tags/${tag._id}`);\n    toast.success(`Successfully deleted tag: '${tag.name}'!`);\n  } catch (err) {\n    const apiError = err.response && err.response.data && err.response.data.reason;\n    toast.error(apiError || err.message);\n  }\n}\n\nconst TagRow = ({ tag, onRequestEdit, onRequestDelete }) => {\n  return (\n    <TableRow>\n      <TableCell>\n        <Text fontSize=\"md\" color=\"gray.500\">\n          {tag.name}\n        </Text>\n      </TableCell>\n      <TableCell bg={tag.num_clubs !== 0 ? \"green.200\" : \"red.200\"}>\n        <Text textAlign=\"center\" fontSize=\"md\" color=\"gray.500\">\n          {tag.num_clubs}\n        </Text>\n      </TableCell>\n      <TableCell textAlign=\"center\">\n        <Menu>\n          <MenuButton as={Button} variant=\"ghost\">\n            <FontAwesomeIcon icon={faChevronDown} size=\"sm\" />\n          </MenuButton>\n          <MenuList>\n            <MenuItem onClick={onRequestEdit}>\n              <span>\n                <FontAwesomeIcon icon={faEdit} size=\"sm\" />\n                {\"  \"}Edit\n              </span>\n            </MenuItem>\n            <MenuItem onClick={onRequestDelete}>\n              <span>\n                <FontAwesomeIcon icon={faTrash} size=\"sm\" />\n                {\"  \"}Remove\n              </span>\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nconst AddTagModal = ({ ctrl, onAdd }) => (\n  <AddEditModal\n    title=\"Add Tag\"\n    ctrl={ctrl}\n    onSave={onAdd}\n    fields={{\n      name: {\n        name: 'Tag Name',\n        value: ''\n      }\n    }}\n  />\n);\n\nconst EditTagModal = ({ tag = null, ctrl, onEdit }) => (\n  tag &&\n  <AddEditModal\n    title=\"Edit Tag\"\n    ctrl={ctrl}\n    onSave={onEdit}\n    fields={{\n      name: {\n        name: 'Tag Name',\n        value: tag.name\n      }\n    }}\n  />\n);\n\nconst DeleteTagModal = ({ tag = null, ctrl, onDelete }) => (\n  tag &&\n  <DeleteModal\n    title=\"Delete Tag\"\n    ctrl={ctrl}\n    onDelete={() => onDelete(tag)}\n    fields={{\n      'Tag Name': tag.name,\n      '# of Clubs': tag.num_clubs,\n    }}\n  />\n);\n\nconst TagListComponent = ({ tags, setTags }) => {\n  const [search, dirtyView, searchView, onDataListChange] = useSearch({\n    data: tags,\n    mapper: tag => tag.name,\n    searchDelay: SEARCH_DELAY,\n    onListChange: async () => {\n      const newTagList = await fetchTags();\n      setTags(newTagList);\n    }\n  });\n\n  const [pageNum, numPages, tagListView, nextPage, prevPage] = useSimplePaginator(searchView, NUM_TAGS_SHOWN);\n\n  const addModalCtrl = useDisclosure();\n  const editModalCtrl = useDisclosure();\n  const deleteModalCtrl = useDisclosure();\n\n  const [selectedTag, setSelectedTag] = useState(null);\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Stack paddingTop=\"32px\">\n        <FirstRowHeader\n          title=\"Tags\"\n          pageNum={pageNum}\n          numPages={numPages}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n\n        <Box\n          paddingTop=\"8px\"\n          paddingBottom=\"4px\"\n        >\n          <SecondRowHeader\n            onChange={query => search.set(query)}\n            onSearch={query => search.set(query)}\n            extraButtons={[\n              {icon: faPlus, onClick: addModalCtrl.onOpen},\n              {icon: faDownload, onClick: downloadTags},\n              {icon: faSync, onClick: () => onDataListChange(() => {})}\n            ]}\n            onStartDownload={downloadTags}\n          />\n        </Box>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableHeader>Tag name</TableHeader>\n              <TableHeader># of clubs</TableHeader>\n              <TableHeader>Actions</TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody opacity={dirtyView.get() ? 0.5 : 1}>\n            <AddTagModal\n              ctrl={addModalCtrl}\n              onAdd={async (tag) => {\n                await onDataListChange(() => addTag(tag));\n                setSelectedTag(null);\n              }}\n            />\n\n            <EditTagModal\n              tag={selectedTag}\n              ctrl={editModalCtrl}\n              onEdit={async (newTag) => {\n                await onDataListChange(() => editTag(selectedTag, newTag));\n                setSelectedTag(null);\n              }}\n            />\n\n            <DeleteTagModal\n              tag={selectedTag}\n              ctrl={deleteModalCtrl}\n              onDelete={async (tag) => {\n                await onDataListChange(() => deleteTag(tag));\n                setSelectedTag(null);\n              }}\n            />\n\n            {tagListView.map((tag, i) => (\n              <TagRow\n                key={i}\n                tag={tag}\n                onRequestEdit={() => {\n                  setSelectedTag(tag);\n                  editModalCtrl.onOpen();\n                }}\n                onRequestDelete={() => {\n                  setSelectedTag(tag);\n                  deleteModalCtrl.onOpen();\n                }}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Stack>\n    </Flex>\n  );\n}\n\nconst TagsPage = () => {\n  useTitle('Tags - sproul.club Dashboard');\n\n  return (\n    <DataLoaderPage promiseFn={fetchTags}>\n      {(data, { setData }) => (\n        <TagListComponent\n          tags={data}\n          setTags={setData}\n        />\n      )}\n    </DataLoaderPage>\n  );\n};\n\nexport default TagsPage;","import React from 'react';\nimport { useTitle } from 'hookrouter';\nimport { Heading, Box, Flex, Grid, Stack, Button } from '@chakra-ui/core';\n\nimport ChartComponent from 'react-chartjs-2';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\n\nimport { API } from '../utils/backendClient';\nimport DataLoaderPage from './DataLoaderPage';\n\nconst BG_RAINBOW_COLORS = [\n  'rgba(255, 99, 132, 0.2)',\n  'rgba(255, 159, 64, 0.2)',\n  'rgba(255, 205, 86, 0.2)',\n  'rgba(75, 192, 192, 0.2)',\n  'rgba(54, 162, 235, 0.2)',\n  'rgba(153, 102, 255, 0.2)',\n  'rgba(201, 203, 207, 0.2)',\n];\n\nconst BORDER_RAINBOW_COLORS = [\n  'rgb(255, 99, 132)',\n  'rgb(255, 159, 64)',\n  'rgb(255, 205, 86)',\n  'rgb(75, 192, 192)',\n  'rgb(54, 162, 235)',\n  'rgb(153, 102, 255)',\n  'rgb(201, 203, 207)',\n];\n\nasync function fetchMoreStats() {\n  const [tagUsage, socialMediaUsage, clubReqStats, picStats] = await Promise.all([\n    API.get('/api/monitor/tags/list'),\n    API.get('/api/monitor/more-stats/social-media'),\n    API.get('/api/monitor/more-stats/club-reqs'),\n    API.get('/api/monitor/more-stats/pic-stats'),\n  ]);\n\n  return {\n    tagUsage: tagUsage.data,\n    socialMedia: socialMediaUsage.data[0],\n    clubReqs: clubReqStats.data[0],\n    picStats: picStats.data[0],\n  }\n}\n\nconst Card = props => (\n  <Box px=\"4\" py=\"5\" rounded=\"sm\" shadow=\"lg\" {...props} />\n);\n\nfunction generateColors(numDataPoints, colorList) {\n  const colors = [];\n  for (let i = 0; i < numDataPoints; i++)\n    colors.push(colorList[i % colorList.length]);\n\n  return colors;\n}\n\nconst DataChart = ({ type, title, data, dataLabels, dataDescription, bgColors, borderColors, showLegend = false }) => {\n  const chartData = {\n    labels: dataLabels,\n    datasets: [{\n      label: dataDescription,\n      data: data,\n      fill: false,\n      backgroundColor: bgColors,\n      borderColor: borderColors,\n      borderWidth: 1\n    }]\n  };\n\n  const chartOptions = {\n    title: {\n      display: true,\n      text: title,\n      fontSize: 18\n    },\n    legend: {\n      display: showLegend\n    },\n    responsive: true,\n    maintainAspectRatio: true,\n  };\n\n  return (\n    <ChartComponent\n      data={chartData}\n      options={chartOptions}\n      type={type}\n      height={50}\n      width={100}\n    />\n  );\n};\n\nconst SocialMediaUsageChart = ({ stats }) => {\n  const labels = Object.keys(stats);\n  const data = Object.values(stats);\n  const numPoints = data.length;\n\n  const bgColors = generateColors(numPoints, BG_RAINBOW_COLORS);\n  const borderColors = generateColors(numPoints, BORDER_RAINBOW_COLORS);\n\n  return (\n    <DataChart\n      type=\"horizontalBar\"\n      title=\"Social Media Usage\"\n      data={data}\n      dataLabels={labels}\n      dataDescription=\"# of clubs\"\n      bgColors={bgColors}\n      borderColors={borderColors}\n      showLegend />\n  );\n};\n\nconst TagUsageChart = ({ stats }) => {\n  const labels = stats.map(tag => tag.name);\n  const data = stats.map(tag => tag.num_clubs);\n  const numPoints = data.length;\n\n  const bgColors = generateColors(numPoints, BG_RAINBOW_COLORS);\n  const borderColors = generateColors(numPoints, BORDER_RAINBOW_COLORS);\n\n  return (\n    <DataChart\n      type=\"bar\"\n      title=\"Tag Usage\"\n      data={data}\n      dataLabels={labels}\n      dataDescription=\"# of clubs\"\n      bgColors={bgColors}\n      borderColors={borderColors}\n      showLegend />\n  );\n};\n\nconst AppRequiredChart = ({ stats }) => {\n  const labels = ['Yes', 'No'];\n  const data = [stats.app_required, stats.no_app_required];\n\n  const bgColors = [BG_RAINBOW_COLORS[3], BG_RAINBOW_COLORS[0]];\n  const borderColors = [BORDER_RAINBOW_COLORS[3], BORDER_RAINBOW_COLORS[0]];\n\n  return (\n    <DataChart\n      type=\"doughnut\"\n      title=\"App Required?\"\n      data={data}\n      dataLabels={labels}\n      dataDescription=\"# of clubs\"\n      bgColors={bgColors}\n      borderColors={borderColors} />\n  );\n}\n\nconst NewMembersChart = ({ stats }) => {\n  const labels = ['Yes', 'No'];\n  const data = [stats.new_members, stats.no_new_members];\n\n  const bgColors = [BG_RAINBOW_COLORS[3], BG_RAINBOW_COLORS[0]];\n  const borderColors = [BORDER_RAINBOW_COLORS[3], BORDER_RAINBOW_COLORS[0]];\n\n  return (\n    <DataChart\n      type=\"doughnut\"\n      title=\"New Members?\"\n      data={data}\n      dataLabels={labels}\n      dataDescription=\"# of clubs\"\n      bgColors={bgColors}\n      borderColors={borderColors} />\n  );\n}\n\nconst LogoUsageChart = ({ stats }) => {\n  const labels = ['Yes', 'No'];\n  const data = [stats.logo_pic, stats.no_logo_pic];\n\n  const bgColors = [BG_RAINBOW_COLORS[3], BG_RAINBOW_COLORS[0]];\n  const borderColors = [BORDER_RAINBOW_COLORS[3], BORDER_RAINBOW_COLORS[0]];\n\n  return (\n    <DataChart\n      type=\"doughnut\"\n      title=\"Has Logo?\"\n      data={data}\n      dataLabels={labels}\n      dataDescription=\"# of clubs\"\n      bgColors={bgColors}\n      borderColors={borderColors} />\n  );\n}\n\nconst BannerUsageChart = ({ stats }) => {\n  const labels = ['Yes', 'No'];\n  const data = [stats.banner_pic, stats.no_banner_pic];\n\n  const bgColors = [BG_RAINBOW_COLORS[3], BG_RAINBOW_COLORS[0]];\n  const borderColors = [BORDER_RAINBOW_COLORS[3], BORDER_RAINBOW_COLORS[0]];\n\n  return (\n    <DataChart\n      type=\"doughnut\"\n      title=\"Has Banner?\"\n      data={data}\n      dataLabels={labels}\n      dataDescription=\"# of clubs\"\n      bgColors={bgColors}\n      borderColors={borderColors} />\n  );\n}\n\nconst MoreStatsDashboard = ({ stats, reload }) => {\n  return (\n    <Stack padding=\"24px\" pr=\"108px\" pl=\"108px\">\n      <Flex justify=\"space-between\">\n        <Heading as=\"h3\" size=\"lg\">More Statistics</Heading>\n        <Button onClick={reload}>\n          <FontAwesomeIcon icon={faRedo}/>\n        </Button>\n      </Flex>\n\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n        <Card>\n          <SocialMediaUsageChart stats={stats.socialMedia} />\n        </Card>\n\n        <Card>\n          <TagUsageChart stats={stats.tagUsage} />\n        </Card>\n      </Grid>\n\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={6}>\n        <Card>\n          <AppRequiredChart stats={stats.clubReqs} />\n        </Card>\n\n        <Card>\n          <NewMembersChart stats={stats.clubReqs} />\n        </Card>\n\n        <Card>\n          <LogoUsageChart stats={stats.picStats} />\n        </Card>\n\n        <Card>\n          <BannerUsageChart stats={stats.picStats} />\n        </Card>\n      </Grid>\n    </Stack>\n  );\n}\n\nconst MoreStatsPage = () => {\n  useTitle('More Stats - sproul.club Dashboard');\n\n  return (\n    <DataLoaderPage promiseFn={fetchMoreStats}>\n      {(data, { reload }) => <MoreStatsDashboard stats={data} reload={reload} />}\n    </DataLoaderPage>\n  );\n};\n\nexport default MoreStatsPage;","import React from 'react';\nimport LoginPage from './pages/LoginPage';\nimport OverviewPage from './pages/OverviewPage';\nimport RSOListPage from './pages/RSOListPage';\nimport ClubsPage from './pages/ClubsPage';\nimport TagsPage from './pages/TagsPage';\nimport MoreStatsPage from './pages/MoreStatsPage';\n\nexport const ROUTE_CONFIG = {\n  HOME: {\n    name: 'Overview',\n    path: '/overview',\n    widget: () => <OverviewPage />\n  },\n  LOGIN: {\n    name: 'Login',\n    path: '/login',\n    widget: () => <LoginPage />,\n    hidden: true\n  },\n  RSO: {\n    name: 'RSO List',\n    path: '/rso',\n    widget: () => <RSOListPage />\n  },\n  CLUBS: {\n    name: 'Clubs',\n    path: '/clubs',\n    widget: () => <ClubsPage />\n  },\n  TAGS: {\n    name: 'Tags',\n    path: '/tags',\n    widget: () => <TagsPage />\n  },\n  MORE_STATS: {\n    name: 'More Stats',\n    path: '/more-stats',\n    widget: () => <MoreStatsPage />\n  }\n};\n\nexport const ROUTE_MAP = {};\nfor (let route of Object.values(ROUTE_CONFIG)) {\n  ROUTE_MAP[route.path] = route.widget;\n}","import React, { useState } from 'react';\nimport { Box, Button, ButtonGroup, Heading, Flex, Text, Image } from \"@chakra-ui/core\";\nimport { A, usePath } from 'hookrouter';\nimport logo from '../assets/logo.png';\nimport { ROUTE_CONFIG } from '../routes';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faDog, faBug } from '@fortawesome/free-solid-svg-icons';\nimport { navigate } from 'hookrouter';\nimport { GlobalAuthManager } from '../utils/GlobalAuthManager';\n\nconst THIRD_PARTY_LINKS = {\n  SCOUT_APM: 'https://scoutapm.com/apps/182171',\n  SENTRY_IO: 'https://sentry.io/organizations/sproulclub/issues/?project=5392072'\n};\n\nconst LinkMenuItem = ({ link, children }) => (\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n    <A href={link}>{children}</A>\n  </Text>\n);\n\nconst RouteLinkCollection = ({ showMenu, config }) => {\n  let routeItems = []\n  for (let [routeKey, route] of Object.entries(config)) {\n    if (!route.hidden) {\n      routeItems.push(\n        <LinkMenuItem\n          key={routeKey}\n          link={route.path}\n        >\n          {route.name}\n        </LinkMenuItem>\n      );\n    }\n  }\n\n  return (\n    <Box\n      display={{ sm: showMenu ? \"block\" : \"none\", md: \"flex\" }}\n      width={{ sm: \"full\", md: \"auto\" }}\n      alignItems=\"center\"\n      flexGrow={1}\n    >\n      {routeItems}\n    </Box>\n  );\n}\n\nasync function signOut() {\n  await GlobalAuthManager.signOut();\n  navigate(ROUTE_CONFIG.LOGIN.path);\n}\n\nconst NavbarHeader = () => {\n  const [showMenu, setShowMenu] = useState(false);\n  const toggleMenuWhenSmall = () => setShowMenu(!showMenu);\n  const HOME_PATH = ROUTE_CONFIG.HOME.path;\n\n  const currentPath = usePath();\n  const currentRoute = Object.values(ROUTE_CONFIG).find(route => currentPath === route.path)\n\n  if (!currentRoute || !!currentRoute.hidden)\n    return null;\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.0rem\"\n      bg=\"blue.300\"\n      color=\"white\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <A href={HOME_PATH}>\n          <Image src={logo} boxSize=\"3.0rem\" />\n        </A>\n        <Heading as=\"h1\" size=\"lg\" paddingLeft=\"1.0rem\">\n          <A href={HOME_PATH}>sproul.club</A>\n        </Heading>\n      </Flex>\n\n      <Box display={{ sm: \"block\", md: \"none\" }} onClick={toggleMenuWhenSmall}>\n        <FontAwesomeIcon icon={faBars}/>\n      </Box>\n      <RouteLinkCollection showMenu={showMenu} config={ROUTE_CONFIG}/>\n\n      <Box\n        display={{ sm: showMenu ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <ButtonGroup>\n          <Button bg=\"orange.300\" border=\"1px\">\n            <a href={THIRD_PARTY_LINKS.SCOUT_APM}>\n              <FontAwesomeIcon icon={faDog}/>\n              <span>{\"  \"}Scout APM</span>\n            </a>\n          </Button>\n\n          <Button bg=\"purple.700\" border=\"1px\">\n            <a href={THIRD_PARTY_LINKS.SENTRY_IO}>\n              <FontAwesomeIcon icon={faBug}/>\n              <span>{\"  \"}Sentry.IO</span>\n            </a>\n          </Button>\n\n          <Button bg=\"transparent\" border=\"1px\" onClick={signOut}>\n            Log out\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default NavbarHeader;","import React from 'react';\n\nimport { setBasepath, useRoutes, useRedirect, navigate } from 'hookrouter';\nimport { ROUTE_MAP, ROUTE_CONFIG } from './routes';\n\nimport { theme, ChakraProvider } from '@chakra-ui/core';\nimport NavbarHeader from './components/NavbarHeader';\n\nimport ErrorPage from './pages/ErrorPage';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { GlobalAuthManager } from './utils/GlobalAuthManager';\n\nif (process.env.NODE_ENV && process.env.NODE_ENV !== 'development') {\n  // production code\n  setBasepath('/sc-admin');\n}\n\nfunction App() {\n  useRedirect('/', ROUTE_CONFIG.LOGIN.path);\n\n  const routeResult = useRoutes(ROUTE_MAP);\n  const renderedPage = routeResult || <ErrorPage errorCode={404} />;\n\n  const isLoggedIn = GlobalAuthManager.isLoggedIn();\n  if (!isLoggedIn)\n    navigate('/login');\n\n  return (\n    <ChakraProvider theme={theme}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n\n      {isLoggedIn && <NavbarHeader />}\n      {isLoggedIn ? renderedPage : ROUTE_CONFIG.LOGIN.widget()}\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0f4508cd.png\";"],"sourceRoot":""}